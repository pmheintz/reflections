How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    Using diff would display the line numbers that were different between the 2
    files, allowing a quick way to find differences.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    When changes are made that break something, you can go back through all the
    changes and remove anything that may have caused issues.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Manually committing allows you to know exactly when you're saving a change
    opposed to automatic when you have no control of when things got saved after
    a change.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    When developing software, often multiple files are used and often you'll have
    to manipulate multiple files to accomplish one task.

How can you use the commands git log and git diff to view the history of files?

    Use git log to determine which files have been changed in the repo, then use
    git diff to view the changes between the commits.

How might using version control make you more confident to make changes that
could break something?

    Using version control allows you the confidence that if you break something
    when making changes, you can always revert back to a previous working version.

Now that you have your workspace set up, what do you want to try using Git for?

    Version control for school projects and android development
